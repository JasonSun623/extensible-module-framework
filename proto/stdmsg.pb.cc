// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: stdmsg.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "stdmsg.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace stdmsg {
class PositionDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<Position>
     _instance;
} _Position_default_instance_;
class OrentationDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<Orentation>
     _instance;
} _Orentation_default_instance_;
class PoseDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<Pose>
     _instance;
} _Pose_default_instance_;
class VelocityDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<Velocity>
     _instance;
} _Velocity_default_instance_;
class Laser_Scan_Laser_ConfigDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<Laser_Scan_Laser_Config>
     _instance;
} _Laser_Scan_Laser_Config_default_instance_;
class Laser_ScanDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<Laser_Scan>
     _instance;
} _Laser_Scan_default_instance_;
class Global_PlanDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<Global_Plan>
     _instance;
} _Global_Plan_default_instance_;
class DataDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<Data>
     _instance;
} _Data_default_instance_;
class StringDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<String>
     _instance;
} _String_default_instance_;
class LaserListDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<LaserList>
     _instance;
} _LaserList_default_instance_;
class BlockDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<Block>
     _instance;
} _Block_default_instance_;
class NetDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<Net>
     _instance;
} _Net_default_instance_;

namespace protobuf_stdmsg_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[12];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Position, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Position, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Position, x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Position, y_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Position, z_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Orentation, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Orentation, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Orentation, roll_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Orentation, pitch_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Orentation, yaw_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Pose, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Pose, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Pose, position_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Pose, orentation_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Velocity, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Velocity, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Velocity, v_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Velocity, w_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Laser_Scan_Laser_Config, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Laser_Scan_Laser_Config, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Laser_Scan_Laser_Config, angle_min_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Laser_Scan_Laser_Config, angle_max_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Laser_Scan_Laser_Config, angle_increment_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Laser_Scan_Laser_Config, range_max_),
  0,
  1,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Laser_Scan, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Laser_Scan, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Laser_Scan, config_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Laser_Scan, ranges_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Laser_Scan, ranges_rssi_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Laser_Scan, intensities_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Laser_Scan, pose_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Laser_Scan, robot_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Laser_Scan, steer_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Laser_Scan, seq_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Laser_Scan, annotation_),
  1,
  ~0u,
  ~0u,
  ~0u,
  2,
  3,
  4,
  5,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Global_Plan, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Global_Plan, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Global_Plan, path_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Global_Plan, seq_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Global_Plan, goal_reached_),
  ~0u,
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Data, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Data, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Data, data_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Data, seq_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(String, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(String, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(String, str_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(String, seq_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LaserList, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LaserList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LaserList, scans_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LaserList, seq_),
  ~0u,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Block, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Block, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Block, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Block, input_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Block, input_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Block, output_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Block, output_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Block, dll_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Block, object_),
  0,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Net, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Net, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Net, block_),
  ~0u,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 8, sizeof(Position)},
  { 11, 19, sizeof(Orentation)},
  { 22, 29, sizeof(Pose)},
  { 31, 38, sizeof(Velocity)},
  { 40, 49, sizeof(Laser_Scan_Laser_Config)},
  { 53, 67, sizeof(Laser_Scan)},
  { 76, 84, sizeof(Global_Plan)},
  { 87, 94, sizeof(Data)},
  { 96, 103, sizeof(String)},
  { 105, 112, sizeof(LaserList)},
  { 114, 126, sizeof(Block)},
  { 133, 139, sizeof(Net)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_Position_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Orentation_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Pose_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Velocity_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Laser_Scan_Laser_Config_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Laser_Scan_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Global_Plan_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Data_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_String_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_LaserList_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Block_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Net_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "stdmsg.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 12);
}

}  // namespace
void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _Position_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_Position_default_instance_);_Orentation_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_Orentation_default_instance_);_Pose_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_Pose_default_instance_);_Velocity_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_Velocity_default_instance_);_Laser_Scan_Laser_Config_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_Laser_Scan_Laser_Config_default_instance_);_Laser_Scan_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_Laser_Scan_default_instance_);_Global_Plan_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_Global_Plan_default_instance_);_Data_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_Data_default_instance_);_String_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_String_default_instance_);_LaserList_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_LaserList_default_instance_);_Block_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_Block_default_instance_);_Net_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_Net_default_instance_);_Pose_default_instance_._instance.get_mutable()->position_ = const_cast< ::stdmsg::Position*>(
      ::stdmsg::Position::internal_default_instance());
  _Pose_default_instance_._instance.get_mutable()->orentation_ = const_cast< ::stdmsg::Orentation*>(
      ::stdmsg::Orentation::internal_default_instance());
  _Laser_Scan_default_instance_._instance.get_mutable()->config_ = const_cast< ::stdmsg::Laser_Scan_Laser_Config*>(
      ::stdmsg::Laser_Scan_Laser_Config::internal_default_instance());
  _Laser_Scan_default_instance_._instance.get_mutable()->pose_ = const_cast< ::stdmsg::Pose*>(
      ::stdmsg::Pose::internal_default_instance());
  _Laser_Scan_default_instance_._instance.get_mutable()->robot_ = const_cast< ::stdmsg::Pose*>(
      ::stdmsg::Pose::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
namespace {
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\014stdmsg.proto\022\006stdmsg\"4\n\010Position\022\014\n\001x\030"
      "\001 \002(\001:\0010\022\014\n\001y\030\002 \002(\001:\0010\022\014\n\001z\030\003 \001(\001:\0010\"\?\n\n"
      "Orentation\022\017\n\004roll\030\001 \001(\001:\0010\022\020\n\005pitch\030\002 \001"
      "(\001:\0010\022\016\n\003yaw\030\003 \002(\001:\0010\"R\n\004Pose\022\"\n\010positio"
      "n\030\001 \002(\0132\020.stdmsg.Position\022&\n\norentation\030"
      "\002 \002(\0132\022.stdmsg.Orentation\"&\n\010Velocity\022\014\n"
      "\001v\030\001 \002(\001:\0010\022\014\n\001w\030\002 \002(\001:\0010\"\307\002\n\nLaser_Scan"
      "\022/\n\006config\030\001 \002(\0132\037.stdmsg.Laser_Scan.Las"
      "er_Config\022\016\n\006ranges\030\002 \003(\002\022\023\n\013ranges_rssi"
      "\030\n \003(\002\022\023\n\013intensities\030\003 \003(\002\022\032\n\004pose\030\005 \002("
      "\0132\014.stdmsg.Pose\022\033\n\005robot\030\006 \002(\0132\014.stdmsg."
      "Pose\022\r\n\005steer\030\t \001(\001\022\016\n\003seq\030\007 \001(\005:\0010\022\024\n\na"
      "nnotation\030\010 \001(\t:\000\032`\n\014Laser_Config\022\021\n\tang"
      "le_min\030\001 \002(\002\022\021\n\tangle_max\030\002 \002(\002\022\027\n\017angle"
      "_increment\030\003 \002(\002\022\021\n\trange_max\030\005 \002(\002\"R\n\013G"
      "lobal_Plan\022\032\n\004path\030\001 \003(\0132\014.stdmsg.Pose\022\016"
      "\n\003seq\030\002 \001(\005:\0010\022\027\n\014goal_reached\030\003 \001(\005:\0010\""
      "&\n\004Data\022\016\n\004data\030\001 \001(\014:\000\022\016\n\003seq\030\002 \001(\005:\0010\""
      "\'\n\006String\022\r\n\003str\030\001 \001(\t:\000\022\016\n\003seq\030\002 \001(\005:\0010"
      "\">\n\tLaserList\022!\n\005scans\030\001 \003(\0132\022.stdmsg.La"
      "ser_Scan\022\016\n\003seq\030\002 \001(\005:\0010\"z\n\005Block\022\014\n\004nam"
      "e\030\001 \002(\t\022\r\n\005input\030\002 \003(\t\022\022\n\ninput_type\030\003 \003"
      "(\t\022\016\n\006output\030\004 \003(\t\022\023\n\013output_type\030\005 \003(\t\022"
      "\013\n\003dll\030\006 \002(\t\022\016\n\006object\030\007 \002(\t\"#\n\003Net\022\034\n\005b"
      "lock\030\001 \003(\0132\r.stdmsg.Block"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 985);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "stdmsg.proto", &protobuf_RegisterTypes);
}
} // anonymous namespace

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_stdmsg_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Position::kXFieldNumber;
const int Position::kYFieldNumber;
const int Position::kZFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Position::Position()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_stdmsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:stdmsg.Position)
}
Position::Position(const Position& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&x_, &from.x_,
    static_cast<size_t>(reinterpret_cast<char*>(&z_) -
    reinterpret_cast<char*>(&x_)) + sizeof(z_));
  // @@protoc_insertion_point(copy_constructor:stdmsg.Position)
}

void Position::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&z_) -
      reinterpret_cast<char*>(&x_)) + sizeof(z_));
}

Position::~Position() {
  // @@protoc_insertion_point(destructor:stdmsg.Position)
  SharedDtor();
}

void Position::SharedDtor() {
}

void Position::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Position::descriptor() {
  protobuf_stdmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_stdmsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Position& Position::default_instance() {
  protobuf_stdmsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

Position* Position::New(::google::protobuf::Arena* arena) const {
  Position* n = new Position;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Position::Clear() {
// @@protoc_insertion_point(message_clear_start:stdmsg.Position)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    ::memset(&x_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&z_) -
        reinterpret_cast<char*>(&x_)) + sizeof(z_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Position::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:stdmsg.Position)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required double x = 1 [default = 0];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          set_has_x();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required double y = 2 [default = 0];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {
          set_has_y();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double z = 3 [default = 0];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u /* 25 & 0xFF */)) {
          set_has_z();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &z_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:stdmsg.Position)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:stdmsg.Position)
  return false;
#undef DO_
}

void Position::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:stdmsg.Position)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required double x = 1 [default = 0];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->x(), output);
  }

  // required double y = 2 [default = 0];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->y(), output);
  }

  // optional double z = 3 [default = 0];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->z(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:stdmsg.Position)
}

::google::protobuf::uint8* Position::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:stdmsg.Position)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required double x = 1 [default = 0];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->x(), target);
  }

  // required double y = 2 [default = 0];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->y(), target);
  }

  // optional double z = 3 [default = 0];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->z(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:stdmsg.Position)
  return target;
}

size_t Position::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:stdmsg.Position)
  size_t total_size = 0;

  if (has_x()) {
    // required double x = 1 [default = 0];
    total_size += 1 + 8;
  }

  if (has_y()) {
    // required double y = 2 [default = 0];
    total_size += 1 + 8;
  }

  return total_size;
}
size_t Position::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:stdmsg.Position)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required double x = 1 [default = 0];
    total_size += 1 + 8;

    // required double y = 2 [default = 0];
    total_size += 1 + 8;

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // optional double z = 3 [default = 0];
  if (has_z()) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Position::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:stdmsg.Position)
  GOOGLE_DCHECK_NE(&from, this);
  const Position* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Position>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:stdmsg.Position)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:stdmsg.Position)
    MergeFrom(*source);
  }
}

void Position::MergeFrom(const Position& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:stdmsg.Position)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      x_ = from.x_;
    }
    if (cached_has_bits & 0x00000002u) {
      y_ = from.y_;
    }
    if (cached_has_bits & 0x00000004u) {
      z_ = from.z_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Position::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:stdmsg.Position)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Position::CopyFrom(const Position& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:stdmsg.Position)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Position::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void Position::Swap(Position* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Position::InternalSwap(Position* other) {
  using std::swap;
  swap(x_, other->x_);
  swap(y_, other->y_);
  swap(z_, other->z_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Position::GetMetadata() const {
  protobuf_stdmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_stdmsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Position

// required double x = 1 [default = 0];
bool Position::has_x() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Position::set_has_x() {
  _has_bits_[0] |= 0x00000001u;
}
void Position::clear_has_x() {
  _has_bits_[0] &= ~0x00000001u;
}
void Position::clear_x() {
  x_ = 0;
  clear_has_x();
}
double Position::x() const {
  // @@protoc_insertion_point(field_get:stdmsg.Position.x)
  return x_;
}
void Position::set_x(double value) {
  set_has_x();
  x_ = value;
  // @@protoc_insertion_point(field_set:stdmsg.Position.x)
}

// required double y = 2 [default = 0];
bool Position::has_y() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Position::set_has_y() {
  _has_bits_[0] |= 0x00000002u;
}
void Position::clear_has_y() {
  _has_bits_[0] &= ~0x00000002u;
}
void Position::clear_y() {
  y_ = 0;
  clear_has_y();
}
double Position::y() const {
  // @@protoc_insertion_point(field_get:stdmsg.Position.y)
  return y_;
}
void Position::set_y(double value) {
  set_has_y();
  y_ = value;
  // @@protoc_insertion_point(field_set:stdmsg.Position.y)
}

// optional double z = 3 [default = 0];
bool Position::has_z() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void Position::set_has_z() {
  _has_bits_[0] |= 0x00000004u;
}
void Position::clear_has_z() {
  _has_bits_[0] &= ~0x00000004u;
}
void Position::clear_z() {
  z_ = 0;
  clear_has_z();
}
double Position::z() const {
  // @@protoc_insertion_point(field_get:stdmsg.Position.z)
  return z_;
}
void Position::set_z(double value) {
  set_has_z();
  z_ = value;
  // @@protoc_insertion_point(field_set:stdmsg.Position.z)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Orentation::kRollFieldNumber;
const int Orentation::kPitchFieldNumber;
const int Orentation::kYawFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Orentation::Orentation()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_stdmsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:stdmsg.Orentation)
}
Orentation::Orentation(const Orentation& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&roll_, &from.roll_,
    static_cast<size_t>(reinterpret_cast<char*>(&yaw_) -
    reinterpret_cast<char*>(&roll_)) + sizeof(yaw_));
  // @@protoc_insertion_point(copy_constructor:stdmsg.Orentation)
}

void Orentation::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&roll_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&yaw_) -
      reinterpret_cast<char*>(&roll_)) + sizeof(yaw_));
}

Orentation::~Orentation() {
  // @@protoc_insertion_point(destructor:stdmsg.Orentation)
  SharedDtor();
}

void Orentation::SharedDtor() {
}

void Orentation::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Orentation::descriptor() {
  protobuf_stdmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_stdmsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Orentation& Orentation::default_instance() {
  protobuf_stdmsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

Orentation* Orentation::New(::google::protobuf::Arena* arena) const {
  Orentation* n = new Orentation;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Orentation::Clear() {
// @@protoc_insertion_point(message_clear_start:stdmsg.Orentation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    ::memset(&roll_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&yaw_) -
        reinterpret_cast<char*>(&roll_)) + sizeof(yaw_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Orentation::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:stdmsg.Orentation)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional double roll = 1 [default = 0];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          set_has_roll();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &roll_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double pitch = 2 [default = 0];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {
          set_has_pitch();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &pitch_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required double yaw = 3 [default = 0];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u /* 25 & 0xFF */)) {
          set_has_yaw();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &yaw_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:stdmsg.Orentation)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:stdmsg.Orentation)
  return false;
#undef DO_
}

void Orentation::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:stdmsg.Orentation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional double roll = 1 [default = 0];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->roll(), output);
  }

  // optional double pitch = 2 [default = 0];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->pitch(), output);
  }

  // required double yaw = 3 [default = 0];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->yaw(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:stdmsg.Orentation)
}

::google::protobuf::uint8* Orentation::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:stdmsg.Orentation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional double roll = 1 [default = 0];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->roll(), target);
  }

  // optional double pitch = 2 [default = 0];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->pitch(), target);
  }

  // required double yaw = 3 [default = 0];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->yaw(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:stdmsg.Orentation)
  return target;
}

size_t Orentation::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:stdmsg.Orentation)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required double yaw = 3 [default = 0];
  if (has_yaw()) {
    total_size += 1 + 8;
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional double roll = 1 [default = 0];
    if (has_roll()) {
      total_size += 1 + 8;
    }

    // optional double pitch = 2 [default = 0];
    if (has_pitch()) {
      total_size += 1 + 8;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Orentation::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:stdmsg.Orentation)
  GOOGLE_DCHECK_NE(&from, this);
  const Orentation* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Orentation>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:stdmsg.Orentation)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:stdmsg.Orentation)
    MergeFrom(*source);
  }
}

void Orentation::MergeFrom(const Orentation& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:stdmsg.Orentation)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      roll_ = from.roll_;
    }
    if (cached_has_bits & 0x00000002u) {
      pitch_ = from.pitch_;
    }
    if (cached_has_bits & 0x00000004u) {
      yaw_ = from.yaw_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Orentation::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:stdmsg.Orentation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Orentation::CopyFrom(const Orentation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:stdmsg.Orentation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Orentation::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000004) != 0x00000004) return false;
  return true;
}

void Orentation::Swap(Orentation* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Orentation::InternalSwap(Orentation* other) {
  using std::swap;
  swap(roll_, other->roll_);
  swap(pitch_, other->pitch_);
  swap(yaw_, other->yaw_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Orentation::GetMetadata() const {
  protobuf_stdmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_stdmsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Orentation

// optional double roll = 1 [default = 0];
bool Orentation::has_roll() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Orentation::set_has_roll() {
  _has_bits_[0] |= 0x00000001u;
}
void Orentation::clear_has_roll() {
  _has_bits_[0] &= ~0x00000001u;
}
void Orentation::clear_roll() {
  roll_ = 0;
  clear_has_roll();
}
double Orentation::roll() const {
  // @@protoc_insertion_point(field_get:stdmsg.Orentation.roll)
  return roll_;
}
void Orentation::set_roll(double value) {
  set_has_roll();
  roll_ = value;
  // @@protoc_insertion_point(field_set:stdmsg.Orentation.roll)
}

// optional double pitch = 2 [default = 0];
bool Orentation::has_pitch() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Orentation::set_has_pitch() {
  _has_bits_[0] |= 0x00000002u;
}
void Orentation::clear_has_pitch() {
  _has_bits_[0] &= ~0x00000002u;
}
void Orentation::clear_pitch() {
  pitch_ = 0;
  clear_has_pitch();
}
double Orentation::pitch() const {
  // @@protoc_insertion_point(field_get:stdmsg.Orentation.pitch)
  return pitch_;
}
void Orentation::set_pitch(double value) {
  set_has_pitch();
  pitch_ = value;
  // @@protoc_insertion_point(field_set:stdmsg.Orentation.pitch)
}

// required double yaw = 3 [default = 0];
bool Orentation::has_yaw() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void Orentation::set_has_yaw() {
  _has_bits_[0] |= 0x00000004u;
}
void Orentation::clear_has_yaw() {
  _has_bits_[0] &= ~0x00000004u;
}
void Orentation::clear_yaw() {
  yaw_ = 0;
  clear_has_yaw();
}
double Orentation::yaw() const {
  // @@protoc_insertion_point(field_get:stdmsg.Orentation.yaw)
  return yaw_;
}
void Orentation::set_yaw(double value) {
  set_has_yaw();
  yaw_ = value;
  // @@protoc_insertion_point(field_set:stdmsg.Orentation.yaw)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Pose::kPositionFieldNumber;
const int Pose::kOrentationFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Pose::Pose()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_stdmsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:stdmsg.Pose)
}
Pose::Pose(const Pose& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_position()) {
    position_ = new ::stdmsg::Position(*from.position_);
  } else {
    position_ = NULL;
  }
  if (from.has_orentation()) {
    orentation_ = new ::stdmsg::Orentation(*from.orentation_);
  } else {
    orentation_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:stdmsg.Pose)
}

void Pose::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&position_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&orentation_) -
      reinterpret_cast<char*>(&position_)) + sizeof(orentation_));
}

Pose::~Pose() {
  // @@protoc_insertion_point(destructor:stdmsg.Pose)
  SharedDtor();
}

void Pose::SharedDtor() {
  if (this != internal_default_instance()) delete position_;
  if (this != internal_default_instance()) delete orentation_;
}

void Pose::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Pose::descriptor() {
  protobuf_stdmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_stdmsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Pose& Pose::default_instance() {
  protobuf_stdmsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

Pose* Pose::New(::google::protobuf::Arena* arena) const {
  Pose* n = new Pose;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Pose::Clear() {
// @@protoc_insertion_point(message_clear_start:stdmsg.Pose)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(position_ != NULL);
      position_->::stdmsg::Position::Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(orentation_ != NULL);
      orentation_->::stdmsg::Orentation::Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Pose::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:stdmsg.Pose)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .stdmsg.Position position = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_position()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .stdmsg.Orentation orentation = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_orentation()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:stdmsg.Pose)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:stdmsg.Pose)
  return false;
#undef DO_
}

void Pose::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:stdmsg.Pose)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .stdmsg.Position position = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->position_, output);
  }

  // required .stdmsg.Orentation orentation = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->orentation_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:stdmsg.Pose)
}

::google::protobuf::uint8* Pose::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:stdmsg.Pose)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .stdmsg.Position position = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->position_, deterministic, target);
  }

  // required .stdmsg.Orentation orentation = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->orentation_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:stdmsg.Pose)
  return target;
}

size_t Pose::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:stdmsg.Pose)
  size_t total_size = 0;

  if (has_position()) {
    // required .stdmsg.Position position = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->position_);
  }

  if (has_orentation()) {
    // required .stdmsg.Orentation orentation = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->orentation_);
  }

  return total_size;
}
size_t Pose::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:stdmsg.Pose)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required .stdmsg.Position position = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->position_);

    // required .stdmsg.Orentation orentation = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->orentation_);

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Pose::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:stdmsg.Pose)
  GOOGLE_DCHECK_NE(&from, this);
  const Pose* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Pose>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:stdmsg.Pose)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:stdmsg.Pose)
    MergeFrom(*source);
  }
}

void Pose::MergeFrom(const Pose& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:stdmsg.Pose)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_position()->::stdmsg::Position::MergeFrom(from.position());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_orentation()->::stdmsg::Orentation::MergeFrom(from.orentation());
    }
  }
}

void Pose::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:stdmsg.Pose)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Pose::CopyFrom(const Pose& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:stdmsg.Pose)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Pose::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  if (has_position()) {
    if (!this->position_->IsInitialized()) return false;
  }
  if (has_orentation()) {
    if (!this->orentation_->IsInitialized()) return false;
  }
  return true;
}

void Pose::Swap(Pose* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Pose::InternalSwap(Pose* other) {
  using std::swap;
  swap(position_, other->position_);
  swap(orentation_, other->orentation_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Pose::GetMetadata() const {
  protobuf_stdmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_stdmsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Pose

// required .stdmsg.Position position = 1;
bool Pose::has_position() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Pose::set_has_position() {
  _has_bits_[0] |= 0x00000001u;
}
void Pose::clear_has_position() {
  _has_bits_[0] &= ~0x00000001u;
}
void Pose::clear_position() {
  if (position_ != NULL) position_->::stdmsg::Position::Clear();
  clear_has_position();
}
const ::stdmsg::Position& Pose::position() const {
  const ::stdmsg::Position* p = position_;
  // @@protoc_insertion_point(field_get:stdmsg.Pose.position)
  return p != NULL ? *p : *reinterpret_cast<const ::stdmsg::Position*>(
      &::stdmsg::_Position_default_instance_);
}
::stdmsg::Position* Pose::mutable_position() {
  set_has_position();
  if (position_ == NULL) {
    position_ = new ::stdmsg::Position;
  }
  // @@protoc_insertion_point(field_mutable:stdmsg.Pose.position)
  return position_;
}
::stdmsg::Position* Pose::release_position() {
  // @@protoc_insertion_point(field_release:stdmsg.Pose.position)
  clear_has_position();
  ::stdmsg::Position* temp = position_;
  position_ = NULL;
  return temp;
}
void Pose::set_allocated_position(::stdmsg::Position* position) {
  delete position_;
  position_ = position;
  if (position) {
    set_has_position();
  } else {
    clear_has_position();
  }
  // @@protoc_insertion_point(field_set_allocated:stdmsg.Pose.position)
}

// required .stdmsg.Orentation orentation = 2;
bool Pose::has_orentation() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Pose::set_has_orentation() {
  _has_bits_[0] |= 0x00000002u;
}
void Pose::clear_has_orentation() {
  _has_bits_[0] &= ~0x00000002u;
}
void Pose::clear_orentation() {
  if (orentation_ != NULL) orentation_->::stdmsg::Orentation::Clear();
  clear_has_orentation();
}
const ::stdmsg::Orentation& Pose::orentation() const {
  const ::stdmsg::Orentation* p = orentation_;
  // @@protoc_insertion_point(field_get:stdmsg.Pose.orentation)
  return p != NULL ? *p : *reinterpret_cast<const ::stdmsg::Orentation*>(
      &::stdmsg::_Orentation_default_instance_);
}
::stdmsg::Orentation* Pose::mutable_orentation() {
  set_has_orentation();
  if (orentation_ == NULL) {
    orentation_ = new ::stdmsg::Orentation;
  }
  // @@protoc_insertion_point(field_mutable:stdmsg.Pose.orentation)
  return orentation_;
}
::stdmsg::Orentation* Pose::release_orentation() {
  // @@protoc_insertion_point(field_release:stdmsg.Pose.orentation)
  clear_has_orentation();
  ::stdmsg::Orentation* temp = orentation_;
  orentation_ = NULL;
  return temp;
}
void Pose::set_allocated_orentation(::stdmsg::Orentation* orentation) {
  delete orentation_;
  orentation_ = orentation;
  if (orentation) {
    set_has_orentation();
  } else {
    clear_has_orentation();
  }
  // @@protoc_insertion_point(field_set_allocated:stdmsg.Pose.orentation)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Velocity::kVFieldNumber;
const int Velocity::kWFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Velocity::Velocity()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_stdmsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:stdmsg.Velocity)
}
Velocity::Velocity(const Velocity& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&v_, &from.v_,
    static_cast<size_t>(reinterpret_cast<char*>(&w_) -
    reinterpret_cast<char*>(&v_)) + sizeof(w_));
  // @@protoc_insertion_point(copy_constructor:stdmsg.Velocity)
}

void Velocity::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&v_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&w_) -
      reinterpret_cast<char*>(&v_)) + sizeof(w_));
}

Velocity::~Velocity() {
  // @@protoc_insertion_point(destructor:stdmsg.Velocity)
  SharedDtor();
}

void Velocity::SharedDtor() {
}

void Velocity::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Velocity::descriptor() {
  protobuf_stdmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_stdmsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Velocity& Velocity::default_instance() {
  protobuf_stdmsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

Velocity* Velocity::New(::google::protobuf::Arena* arena) const {
  Velocity* n = new Velocity;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Velocity::Clear() {
// @@protoc_insertion_point(message_clear_start:stdmsg.Velocity)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&v_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&w_) -
        reinterpret_cast<char*>(&v_)) + sizeof(w_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Velocity::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:stdmsg.Velocity)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required double v = 1 [default = 0];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          set_has_v();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &v_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required double w = 2 [default = 0];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {
          set_has_w();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &w_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:stdmsg.Velocity)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:stdmsg.Velocity)
  return false;
#undef DO_
}

void Velocity::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:stdmsg.Velocity)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required double v = 1 [default = 0];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->v(), output);
  }

  // required double w = 2 [default = 0];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->w(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:stdmsg.Velocity)
}

::google::protobuf::uint8* Velocity::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:stdmsg.Velocity)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required double v = 1 [default = 0];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->v(), target);
  }

  // required double w = 2 [default = 0];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->w(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:stdmsg.Velocity)
  return target;
}

size_t Velocity::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:stdmsg.Velocity)
  size_t total_size = 0;

  if (has_v()) {
    // required double v = 1 [default = 0];
    total_size += 1 + 8;
  }

  if (has_w()) {
    // required double w = 2 [default = 0];
    total_size += 1 + 8;
  }

  return total_size;
}
size_t Velocity::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:stdmsg.Velocity)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required double v = 1 [default = 0];
    total_size += 1 + 8;

    // required double w = 2 [default = 0];
    total_size += 1 + 8;

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Velocity::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:stdmsg.Velocity)
  GOOGLE_DCHECK_NE(&from, this);
  const Velocity* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Velocity>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:stdmsg.Velocity)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:stdmsg.Velocity)
    MergeFrom(*source);
  }
}

void Velocity::MergeFrom(const Velocity& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:stdmsg.Velocity)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      v_ = from.v_;
    }
    if (cached_has_bits & 0x00000002u) {
      w_ = from.w_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Velocity::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:stdmsg.Velocity)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Velocity::CopyFrom(const Velocity& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:stdmsg.Velocity)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Velocity::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void Velocity::Swap(Velocity* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Velocity::InternalSwap(Velocity* other) {
  using std::swap;
  swap(v_, other->v_);
  swap(w_, other->w_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Velocity::GetMetadata() const {
  protobuf_stdmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_stdmsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Velocity

// required double v = 1 [default = 0];
bool Velocity::has_v() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Velocity::set_has_v() {
  _has_bits_[0] |= 0x00000001u;
}
void Velocity::clear_has_v() {
  _has_bits_[0] &= ~0x00000001u;
}
void Velocity::clear_v() {
  v_ = 0;
  clear_has_v();
}
double Velocity::v() const {
  // @@protoc_insertion_point(field_get:stdmsg.Velocity.v)
  return v_;
}
void Velocity::set_v(double value) {
  set_has_v();
  v_ = value;
  // @@protoc_insertion_point(field_set:stdmsg.Velocity.v)
}

// required double w = 2 [default = 0];
bool Velocity::has_w() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Velocity::set_has_w() {
  _has_bits_[0] |= 0x00000002u;
}
void Velocity::clear_has_w() {
  _has_bits_[0] &= ~0x00000002u;
}
void Velocity::clear_w() {
  w_ = 0;
  clear_has_w();
}
double Velocity::w() const {
  // @@protoc_insertion_point(field_get:stdmsg.Velocity.w)
  return w_;
}
void Velocity::set_w(double value) {
  set_has_w();
  w_ = value;
  // @@protoc_insertion_point(field_set:stdmsg.Velocity.w)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Laser_Scan_Laser_Config::kAngleMinFieldNumber;
const int Laser_Scan_Laser_Config::kAngleMaxFieldNumber;
const int Laser_Scan_Laser_Config::kAngleIncrementFieldNumber;
const int Laser_Scan_Laser_Config::kRangeMaxFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Laser_Scan_Laser_Config::Laser_Scan_Laser_Config()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_stdmsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:stdmsg.Laser_Scan.Laser_Config)
}
Laser_Scan_Laser_Config::Laser_Scan_Laser_Config(const Laser_Scan_Laser_Config& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&angle_min_, &from.angle_min_,
    static_cast<size_t>(reinterpret_cast<char*>(&range_max_) -
    reinterpret_cast<char*>(&angle_min_)) + sizeof(range_max_));
  // @@protoc_insertion_point(copy_constructor:stdmsg.Laser_Scan.Laser_Config)
}

void Laser_Scan_Laser_Config::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&angle_min_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&range_max_) -
      reinterpret_cast<char*>(&angle_min_)) + sizeof(range_max_));
}

Laser_Scan_Laser_Config::~Laser_Scan_Laser_Config() {
  // @@protoc_insertion_point(destructor:stdmsg.Laser_Scan.Laser_Config)
  SharedDtor();
}

void Laser_Scan_Laser_Config::SharedDtor() {
}

void Laser_Scan_Laser_Config::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Laser_Scan_Laser_Config::descriptor() {
  protobuf_stdmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_stdmsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Laser_Scan_Laser_Config& Laser_Scan_Laser_Config::default_instance() {
  protobuf_stdmsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

Laser_Scan_Laser_Config* Laser_Scan_Laser_Config::New(::google::protobuf::Arena* arena) const {
  Laser_Scan_Laser_Config* n = new Laser_Scan_Laser_Config;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Laser_Scan_Laser_Config::Clear() {
// @@protoc_insertion_point(message_clear_start:stdmsg.Laser_Scan.Laser_Config)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 15u) {
    ::memset(&angle_min_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&range_max_) -
        reinterpret_cast<char*>(&angle_min_)) + sizeof(range_max_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Laser_Scan_Laser_Config::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:stdmsg.Laser_Scan.Laser_Config)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required float angle_min = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {
          set_has_angle_min();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &angle_min_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required float angle_max = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {
          set_has_angle_max();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &angle_max_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required float angle_increment = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {
          set_has_angle_increment();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &angle_increment_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required float range_max = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(45u /* 45 & 0xFF */)) {
          set_has_range_max();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &range_max_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:stdmsg.Laser_Scan.Laser_Config)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:stdmsg.Laser_Scan.Laser_Config)
  return false;
#undef DO_
}

void Laser_Scan_Laser_Config::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:stdmsg.Laser_Scan.Laser_Config)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required float angle_min = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->angle_min(), output);
  }

  // required float angle_max = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->angle_max(), output);
  }

  // required float angle_increment = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->angle_increment(), output);
  }

  // required float range_max = 5;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(5, this->range_max(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:stdmsg.Laser_Scan.Laser_Config)
}

::google::protobuf::uint8* Laser_Scan_Laser_Config::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:stdmsg.Laser_Scan.Laser_Config)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required float angle_min = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->angle_min(), target);
  }

  // required float angle_max = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->angle_max(), target);
  }

  // required float angle_increment = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->angle_increment(), target);
  }

  // required float range_max = 5;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(5, this->range_max(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:stdmsg.Laser_Scan.Laser_Config)
  return target;
}

size_t Laser_Scan_Laser_Config::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:stdmsg.Laser_Scan.Laser_Config)
  size_t total_size = 0;

  if (has_angle_min()) {
    // required float angle_min = 1;
    total_size += 1 + 4;
  }

  if (has_angle_max()) {
    // required float angle_max = 2;
    total_size += 1 + 4;
  }

  if (has_angle_increment()) {
    // required float angle_increment = 3;
    total_size += 1 + 4;
  }

  if (has_range_max()) {
    // required float range_max = 5;
    total_size += 1 + 4;
  }

  return total_size;
}
size_t Laser_Scan_Laser_Config::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:stdmsg.Laser_Scan.Laser_Config)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000000f) ^ 0x0000000f) == 0) {  // All required fields are present.
    // required float angle_min = 1;
    total_size += 1 + 4;

    // required float angle_max = 2;
    total_size += 1 + 4;

    // required float angle_increment = 3;
    total_size += 1 + 4;

    // required float range_max = 5;
    total_size += 1 + 4;

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Laser_Scan_Laser_Config::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:stdmsg.Laser_Scan.Laser_Config)
  GOOGLE_DCHECK_NE(&from, this);
  const Laser_Scan_Laser_Config* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Laser_Scan_Laser_Config>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:stdmsg.Laser_Scan.Laser_Config)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:stdmsg.Laser_Scan.Laser_Config)
    MergeFrom(*source);
  }
}

void Laser_Scan_Laser_Config::MergeFrom(const Laser_Scan_Laser_Config& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:stdmsg.Laser_Scan.Laser_Config)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      angle_min_ = from.angle_min_;
    }
    if (cached_has_bits & 0x00000002u) {
      angle_max_ = from.angle_max_;
    }
    if (cached_has_bits & 0x00000004u) {
      angle_increment_ = from.angle_increment_;
    }
    if (cached_has_bits & 0x00000008u) {
      range_max_ = from.range_max_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Laser_Scan_Laser_Config::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:stdmsg.Laser_Scan.Laser_Config)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Laser_Scan_Laser_Config::CopyFrom(const Laser_Scan_Laser_Config& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:stdmsg.Laser_Scan.Laser_Config)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Laser_Scan_Laser_Config::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;
  return true;
}

void Laser_Scan_Laser_Config::Swap(Laser_Scan_Laser_Config* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Laser_Scan_Laser_Config::InternalSwap(Laser_Scan_Laser_Config* other) {
  using std::swap;
  swap(angle_min_, other->angle_min_);
  swap(angle_max_, other->angle_max_);
  swap(angle_increment_, other->angle_increment_);
  swap(range_max_, other->range_max_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Laser_Scan_Laser_Config::GetMetadata() const {
  protobuf_stdmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_stdmsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Laser_Scan_Laser_Config

// required float angle_min = 1;
bool Laser_Scan_Laser_Config::has_angle_min() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Laser_Scan_Laser_Config::set_has_angle_min() {
  _has_bits_[0] |= 0x00000001u;
}
void Laser_Scan_Laser_Config::clear_has_angle_min() {
  _has_bits_[0] &= ~0x00000001u;
}
void Laser_Scan_Laser_Config::clear_angle_min() {
  angle_min_ = 0;
  clear_has_angle_min();
}
float Laser_Scan_Laser_Config::angle_min() const {
  // @@protoc_insertion_point(field_get:stdmsg.Laser_Scan.Laser_Config.angle_min)
  return angle_min_;
}
void Laser_Scan_Laser_Config::set_angle_min(float value) {
  set_has_angle_min();
  angle_min_ = value;
  // @@protoc_insertion_point(field_set:stdmsg.Laser_Scan.Laser_Config.angle_min)
}

// required float angle_max = 2;
bool Laser_Scan_Laser_Config::has_angle_max() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Laser_Scan_Laser_Config::set_has_angle_max() {
  _has_bits_[0] |= 0x00000002u;
}
void Laser_Scan_Laser_Config::clear_has_angle_max() {
  _has_bits_[0] &= ~0x00000002u;
}
void Laser_Scan_Laser_Config::clear_angle_max() {
  angle_max_ = 0;
  clear_has_angle_max();
}
float Laser_Scan_Laser_Config::angle_max() const {
  // @@protoc_insertion_point(field_get:stdmsg.Laser_Scan.Laser_Config.angle_max)
  return angle_max_;
}
void Laser_Scan_Laser_Config::set_angle_max(float value) {
  set_has_angle_max();
  angle_max_ = value;
  // @@protoc_insertion_point(field_set:stdmsg.Laser_Scan.Laser_Config.angle_max)
}

// required float angle_increment = 3;
bool Laser_Scan_Laser_Config::has_angle_increment() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void Laser_Scan_Laser_Config::set_has_angle_increment() {
  _has_bits_[0] |= 0x00000004u;
}
void Laser_Scan_Laser_Config::clear_has_angle_increment() {
  _has_bits_[0] &= ~0x00000004u;
}
void Laser_Scan_Laser_Config::clear_angle_increment() {
  angle_increment_ = 0;
  clear_has_angle_increment();
}
float Laser_Scan_Laser_Config::angle_increment() const {
  // @@protoc_insertion_point(field_get:stdmsg.Laser_Scan.Laser_Config.angle_increment)
  return angle_increment_;
}
void Laser_Scan_Laser_Config::set_angle_increment(float value) {
  set_has_angle_increment();
  angle_increment_ = value;
  // @@protoc_insertion_point(field_set:stdmsg.Laser_Scan.Laser_Config.angle_increment)
}

// required float range_max = 5;
bool Laser_Scan_Laser_Config::has_range_max() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void Laser_Scan_Laser_Config::set_has_range_max() {
  _has_bits_[0] |= 0x00000008u;
}
void Laser_Scan_Laser_Config::clear_has_range_max() {
  _has_bits_[0] &= ~0x00000008u;
}
void Laser_Scan_Laser_Config::clear_range_max() {
  range_max_ = 0;
  clear_has_range_max();
}
float Laser_Scan_Laser_Config::range_max() const {
  // @@protoc_insertion_point(field_get:stdmsg.Laser_Scan.Laser_Config.range_max)
  return range_max_;
}
void Laser_Scan_Laser_Config::set_range_max(float value) {
  set_has_range_max();
  range_max_ = value;
  // @@protoc_insertion_point(field_set:stdmsg.Laser_Scan.Laser_Config.range_max)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Laser_Scan::kConfigFieldNumber;
const int Laser_Scan::kRangesFieldNumber;
const int Laser_Scan::kRangesRssiFieldNumber;
const int Laser_Scan::kIntensitiesFieldNumber;
const int Laser_Scan::kPoseFieldNumber;
const int Laser_Scan::kRobotFieldNumber;
const int Laser_Scan::kSteerFieldNumber;
const int Laser_Scan::kSeqFieldNumber;
const int Laser_Scan::kAnnotationFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Laser_Scan::Laser_Scan()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_stdmsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:stdmsg.Laser_Scan)
}
Laser_Scan::Laser_Scan(const Laser_Scan& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      ranges_(from.ranges_),
      intensities_(from.intensities_),
      ranges_rssi_(from.ranges_rssi_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  annotation_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_annotation()) {
    annotation_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.annotation_);
  }
  if (from.has_config()) {
    config_ = new ::stdmsg::Laser_Scan_Laser_Config(*from.config_);
  } else {
    config_ = NULL;
  }
  if (from.has_pose()) {
    pose_ = new ::stdmsg::Pose(*from.pose_);
  } else {
    pose_ = NULL;
  }
  if (from.has_robot()) {
    robot_ = new ::stdmsg::Pose(*from.robot_);
  } else {
    robot_ = NULL;
  }
  ::memcpy(&steer_, &from.steer_,
    static_cast<size_t>(reinterpret_cast<char*>(&seq_) -
    reinterpret_cast<char*>(&steer_)) + sizeof(seq_));
  // @@protoc_insertion_point(copy_constructor:stdmsg.Laser_Scan)
}

void Laser_Scan::SharedCtor() {
  _cached_size_ = 0;
  annotation_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&config_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&seq_) -
      reinterpret_cast<char*>(&config_)) + sizeof(seq_));
}

Laser_Scan::~Laser_Scan() {
  // @@protoc_insertion_point(destructor:stdmsg.Laser_Scan)
  SharedDtor();
}

void Laser_Scan::SharedDtor() {
  annotation_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete config_;
  if (this != internal_default_instance()) delete pose_;
  if (this != internal_default_instance()) delete robot_;
}

void Laser_Scan::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Laser_Scan::descriptor() {
  protobuf_stdmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_stdmsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Laser_Scan& Laser_Scan::default_instance() {
  protobuf_stdmsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

Laser_Scan* Laser_Scan::New(::google::protobuf::Arena* arena) const {
  Laser_Scan* n = new Laser_Scan;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Laser_Scan::Clear() {
// @@protoc_insertion_point(message_clear_start:stdmsg.Laser_Scan)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ranges_.Clear();
  intensities_.Clear();
  ranges_rssi_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!annotation_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*annotation_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(config_ != NULL);
      config_->::stdmsg::Laser_Scan_Laser_Config::Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(pose_ != NULL);
      pose_->::stdmsg::Pose::Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(robot_ != NULL);
      robot_->::stdmsg::Pose::Clear();
    }
  }
  if (cached_has_bits & 48u) {
    ::memset(&steer_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&seq_) -
        reinterpret_cast<char*>(&steer_)) + sizeof(seq_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Laser_Scan::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:stdmsg.Laser_Scan)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .stdmsg.Laser_Scan.Laser_Config config = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated float ranges = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 21u, input, this->mutable_ranges())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_ranges())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated float intensities = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 29u, input, this->mutable_intensities())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_intensities())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .stdmsg.Pose pose = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_pose()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .stdmsg.Pose robot = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_robot()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 seq = 7 [default = 0];
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          set_has_seq();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &seq_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string annotation = 8 [default = ""];
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_annotation()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->annotation().data(), static_cast<int>(this->annotation().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "stdmsg.Laser_Scan.annotation");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double steer = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(73u /* 73 & 0xFF */)) {
          set_has_steer();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &steer_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated float ranges_rssi = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(85u /* 85 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 85u, input, this->mutable_ranges_rssi())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_ranges_rssi())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:stdmsg.Laser_Scan)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:stdmsg.Laser_Scan)
  return false;
#undef DO_
}

void Laser_Scan::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:stdmsg.Laser_Scan)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .stdmsg.Laser_Scan.Laser_Config config = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->config_, output);
  }

  // repeated float ranges = 2;
  for (int i = 0, n = this->ranges_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(
      2, this->ranges(i), output);
  }

  // repeated float intensities = 3;
  for (int i = 0, n = this->intensities_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(
      3, this->intensities(i), output);
  }

  // required .stdmsg.Pose pose = 5;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->pose_, output);
  }

  // required .stdmsg.Pose robot = 6;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *this->robot_, output);
  }

  // optional int32 seq = 7 [default = 0];
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->seq(), output);
  }

  // optional string annotation = 8 [default = ""];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->annotation().data(), static_cast<int>(this->annotation().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "stdmsg.Laser_Scan.annotation");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->annotation(), output);
  }

  // optional double steer = 9;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(9, this->steer(), output);
  }

  // repeated float ranges_rssi = 10;
  for (int i = 0, n = this->ranges_rssi_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(
      10, this->ranges_rssi(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:stdmsg.Laser_Scan)
}

::google::protobuf::uint8* Laser_Scan::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:stdmsg.Laser_Scan)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .stdmsg.Laser_Scan.Laser_Config config = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->config_, deterministic, target);
  }

  // repeated float ranges = 2;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteFloatToArray(2, this->ranges_, target);

  // repeated float intensities = 3;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteFloatToArray(3, this->intensities_, target);

  // required .stdmsg.Pose pose = 5;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, *this->pose_, deterministic, target);
  }

  // required .stdmsg.Pose robot = 6;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        6, *this->robot_, deterministic, target);
  }

  // optional int32 seq = 7 [default = 0];
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->seq(), target);
  }

  // optional string annotation = 8 [default = ""];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->annotation().data(), static_cast<int>(this->annotation().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "stdmsg.Laser_Scan.annotation");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->annotation(), target);
  }

  // optional double steer = 9;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(9, this->steer(), target);
  }

  // repeated float ranges_rssi = 10;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteFloatToArray(10, this->ranges_rssi_, target);

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:stdmsg.Laser_Scan)
  return target;
}

size_t Laser_Scan::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:stdmsg.Laser_Scan)
  size_t total_size = 0;

  if (has_config()) {
    // required .stdmsg.Laser_Scan.Laser_Config config = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->config_);
  }

  if (has_pose()) {
    // required .stdmsg.Pose pose = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->pose_);
  }

  if (has_robot()) {
    // required .stdmsg.Pose robot = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->robot_);
  }

  return total_size;
}
size_t Laser_Scan::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:stdmsg.Laser_Scan)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000000e) ^ 0x0000000e) == 0) {  // All required fields are present.
    // required .stdmsg.Laser_Scan.Laser_Config config = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->config_);

    // required .stdmsg.Pose pose = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->pose_);

    // required .stdmsg.Pose robot = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->robot_);

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated float ranges = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->ranges_size());
    size_t data_size = 4UL * count;
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->ranges_size());
    total_size += data_size;
  }

  // repeated float intensities = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->intensities_size());
    size_t data_size = 4UL * count;
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->intensities_size());
    total_size += data_size;
  }

  // repeated float ranges_rssi = 10;
  {
    unsigned int count = static_cast<unsigned int>(this->ranges_rssi_size());
    size_t data_size = 4UL * count;
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->ranges_rssi_size());
    total_size += data_size;
  }

  // optional string annotation = 8 [default = ""];
  if (has_annotation()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->annotation());
  }

  if (_has_bits_[0 / 32] & 48u) {
    // optional double steer = 9;
    if (has_steer()) {
      total_size += 1 + 8;
    }

    // optional int32 seq = 7 [default = 0];
    if (has_seq()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->seq());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Laser_Scan::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:stdmsg.Laser_Scan)
  GOOGLE_DCHECK_NE(&from, this);
  const Laser_Scan* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Laser_Scan>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:stdmsg.Laser_Scan)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:stdmsg.Laser_Scan)
    MergeFrom(*source);
  }
}

void Laser_Scan::MergeFrom(const Laser_Scan& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:stdmsg.Laser_Scan)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  ranges_.MergeFrom(from.ranges_);
  intensities_.MergeFrom(from.intensities_);
  ranges_rssi_.MergeFrom(from.ranges_rssi_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_annotation();
      annotation_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.annotation_);
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_config()->::stdmsg::Laser_Scan_Laser_Config::MergeFrom(from.config());
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_pose()->::stdmsg::Pose::MergeFrom(from.pose());
    }
    if (cached_has_bits & 0x00000008u) {
      mutable_robot()->::stdmsg::Pose::MergeFrom(from.robot());
    }
    if (cached_has_bits & 0x00000010u) {
      steer_ = from.steer_;
    }
    if (cached_has_bits & 0x00000020u) {
      seq_ = from.seq_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Laser_Scan::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:stdmsg.Laser_Scan)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Laser_Scan::CopyFrom(const Laser_Scan& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:stdmsg.Laser_Scan)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Laser_Scan::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000e) != 0x0000000e) return false;
  if (has_config()) {
    if (!this->config_->IsInitialized()) return false;
  }
  if (has_pose()) {
    if (!this->pose_->IsInitialized()) return false;
  }
  if (has_robot()) {
    if (!this->robot_->IsInitialized()) return false;
  }
  return true;
}

void Laser_Scan::Swap(Laser_Scan* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Laser_Scan::InternalSwap(Laser_Scan* other) {
  using std::swap;
  ranges_.InternalSwap(&other->ranges_);
  intensities_.InternalSwap(&other->intensities_);
  ranges_rssi_.InternalSwap(&other->ranges_rssi_);
  annotation_.Swap(&other->annotation_);
  swap(config_, other->config_);
  swap(pose_, other->pose_);
  swap(robot_, other->robot_);
  swap(steer_, other->steer_);
  swap(seq_, other->seq_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Laser_Scan::GetMetadata() const {
  protobuf_stdmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_stdmsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Laser_Scan

// required .stdmsg.Laser_Scan.Laser_Config config = 1;
bool Laser_Scan::has_config() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Laser_Scan::set_has_config() {
  _has_bits_[0] |= 0x00000002u;
}
void Laser_Scan::clear_has_config() {
  _has_bits_[0] &= ~0x00000002u;
}
void Laser_Scan::clear_config() {
  if (config_ != NULL) config_->::stdmsg::Laser_Scan_Laser_Config::Clear();
  clear_has_config();
}
const ::stdmsg::Laser_Scan_Laser_Config& Laser_Scan::config() const {
  const ::stdmsg::Laser_Scan_Laser_Config* p = config_;
  // @@protoc_insertion_point(field_get:stdmsg.Laser_Scan.config)
  return p != NULL ? *p : *reinterpret_cast<const ::stdmsg::Laser_Scan_Laser_Config*>(
      &::stdmsg::_Laser_Scan_Laser_Config_default_instance_);
}
::stdmsg::Laser_Scan_Laser_Config* Laser_Scan::mutable_config() {
  set_has_config();
  if (config_ == NULL) {
    config_ = new ::stdmsg::Laser_Scan_Laser_Config;
  }
  // @@protoc_insertion_point(field_mutable:stdmsg.Laser_Scan.config)
  return config_;
}
::stdmsg::Laser_Scan_Laser_Config* Laser_Scan::release_config() {
  // @@protoc_insertion_point(field_release:stdmsg.Laser_Scan.config)
  clear_has_config();
  ::stdmsg::Laser_Scan_Laser_Config* temp = config_;
  config_ = NULL;
  return temp;
}
void Laser_Scan::set_allocated_config(::stdmsg::Laser_Scan_Laser_Config* config) {
  delete config_;
  config_ = config;
  if (config) {
    set_has_config();
  } else {
    clear_has_config();
  }
  // @@protoc_insertion_point(field_set_allocated:stdmsg.Laser_Scan.config)
}

// repeated float ranges = 2;
int Laser_Scan::ranges_size() const {
  return ranges_.size();
}
void Laser_Scan::clear_ranges() {
  ranges_.Clear();
}
float Laser_Scan::ranges(int index) const {
  // @@protoc_insertion_point(field_get:stdmsg.Laser_Scan.ranges)
  return ranges_.Get(index);
}
void Laser_Scan::set_ranges(int index, float value) {
  ranges_.Set(index, value);
  // @@protoc_insertion_point(field_set:stdmsg.Laser_Scan.ranges)
}
void Laser_Scan::add_ranges(float value) {
  ranges_.Add(value);
  // @@protoc_insertion_point(field_add:stdmsg.Laser_Scan.ranges)
}
const ::google::protobuf::RepeatedField< float >&
Laser_Scan::ranges() const {
  // @@protoc_insertion_point(field_list:stdmsg.Laser_Scan.ranges)
  return ranges_;
}
::google::protobuf::RepeatedField< float >*
Laser_Scan::mutable_ranges() {
  // @@protoc_insertion_point(field_mutable_list:stdmsg.Laser_Scan.ranges)
  return &ranges_;
}

// repeated float ranges_rssi = 10;
int Laser_Scan::ranges_rssi_size() const {
  return ranges_rssi_.size();
}
void Laser_Scan::clear_ranges_rssi() {
  ranges_rssi_.Clear();
}
float Laser_Scan::ranges_rssi(int index) const {
  // @@protoc_insertion_point(field_get:stdmsg.Laser_Scan.ranges_rssi)
  return ranges_rssi_.Get(index);
}
void Laser_Scan::set_ranges_rssi(int index, float value) {
  ranges_rssi_.Set(index, value);
  // @@protoc_insertion_point(field_set:stdmsg.Laser_Scan.ranges_rssi)
}
void Laser_Scan::add_ranges_rssi(float value) {
  ranges_rssi_.Add(value);
  // @@protoc_insertion_point(field_add:stdmsg.Laser_Scan.ranges_rssi)
}
const ::google::protobuf::RepeatedField< float >&
Laser_Scan::ranges_rssi() const {
  // @@protoc_insertion_point(field_list:stdmsg.Laser_Scan.ranges_rssi)
  return ranges_rssi_;
}
::google::protobuf::RepeatedField< float >*
Laser_Scan::mutable_ranges_rssi() {
  // @@protoc_insertion_point(field_mutable_list:stdmsg.Laser_Scan.ranges_rssi)
  return &ranges_rssi_;
}

// repeated float intensities = 3;
int Laser_Scan::intensities_size() const {
  return intensities_.size();
}
void Laser_Scan::clear_intensities() {
  intensities_.Clear();
}
float Laser_Scan::intensities(int index) const {
  // @@protoc_insertion_point(field_get:stdmsg.Laser_Scan.intensities)
  return intensities_.Get(index);
}
void Laser_Scan::set_intensities(int index, float value) {
  intensities_.Set(index, value);
  // @@protoc_insertion_point(field_set:stdmsg.Laser_Scan.intensities)
}
void Laser_Scan::add_intensities(float value) {
  intensities_.Add(value);
  // @@protoc_insertion_point(field_add:stdmsg.Laser_Scan.intensities)
}
const ::google::protobuf::RepeatedField< float >&
Laser_Scan::intensities() const {
  // @@protoc_insertion_point(field_list:stdmsg.Laser_Scan.intensities)
  return intensities_;
}
::google::protobuf::RepeatedField< float >*
Laser_Scan::mutable_intensities() {
  // @@protoc_insertion_point(field_mutable_list:stdmsg.Laser_Scan.intensities)
  return &intensities_;
}

// required .stdmsg.Pose pose = 5;
bool Laser_Scan::has_pose() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void Laser_Scan::set_has_pose() {
  _has_bits_[0] |= 0x00000004u;
}
void Laser_Scan::clear_has_pose() {
  _has_bits_[0] &= ~0x00000004u;
}
void Laser_Scan::clear_pose() {
  if (pose_ != NULL) pose_->::stdmsg::Pose::Clear();
  clear_has_pose();
}
const ::stdmsg::Pose& Laser_Scan::pose() const {
  const ::stdmsg::Pose* p = pose_;
  // @@protoc_insertion_point(field_get:stdmsg.Laser_Scan.pose)
  return p != NULL ? *p : *reinterpret_cast<const ::stdmsg::Pose*>(
      &::stdmsg::_Pose_default_instance_);
}
::stdmsg::Pose* Laser_Scan::mutable_pose() {
  set_has_pose();
  if (pose_ == NULL) {
    pose_ = new ::stdmsg::Pose;
  }
  // @@protoc_insertion_point(field_mutable:stdmsg.Laser_Scan.pose)
  return pose_;
}
::stdmsg::Pose* Laser_Scan::release_pose() {
  // @@protoc_insertion_point(field_release:stdmsg.Laser_Scan.pose)
  clear_has_pose();
  ::stdmsg::Pose* temp = pose_;
  pose_ = NULL;
  return temp;
}
void Laser_Scan::set_allocated_pose(::stdmsg::Pose* pose) {
  delete pose_;
  pose_ = pose;
  if (pose) {
    set_has_pose();
  } else {
    clear_has_pose();
  }
  // @@protoc_insertion_point(field_set_allocated:stdmsg.Laser_Scan.pose)
}

// required .stdmsg.Pose robot = 6;
bool Laser_Scan::has_robot() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void Laser_Scan::set_has_robot() {
  _has_bits_[0] |= 0x00000008u;
}
void Laser_Scan::clear_has_robot() {
  _has_bits_[0] &= ~0x00000008u;
}
void Laser_Scan::clear_robot() {
  if (robot_ != NULL) robot_->::stdmsg::Pose::Clear();
  clear_has_robot();
}
const ::stdmsg::Pose& Laser_Scan::robot() const {
  const ::stdmsg::Pose* p = robot_;
  // @@protoc_insertion_point(field_get:stdmsg.Laser_Scan.robot)
  return p != NULL ? *p : *reinterpret_cast<const ::stdmsg::Pose*>(
      &::stdmsg::_Pose_default_instance_);
}
::stdmsg::Pose* Laser_Scan::mutable_robot() {
  set_has_robot();
  if (robot_ == NULL) {
    robot_ = new ::stdmsg::Pose;
  }
  // @@protoc_insertion_point(field_mutable:stdmsg.Laser_Scan.robot)
  return robot_;
}
::stdmsg::Pose* Laser_Scan::release_robot() {
  // @@protoc_insertion_point(field_release:stdmsg.Laser_Scan.robot)
  clear_has_robot();
  ::stdmsg::Pose* temp = robot_;
  robot_ = NULL;
  return temp;
}
void Laser_Scan::set_allocated_robot(::stdmsg::Pose* robot) {
  delete robot_;
  robot_ = robot;
  if (robot) {
    set_has_robot();
  } else {
    clear_has_robot();
  }
  // @@protoc_insertion_point(field_set_allocated:stdmsg.Laser_Scan.robot)
}

// optional double steer = 9;
bool Laser_Scan::has_steer() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void Laser_Scan::set_has_steer() {
  _has_bits_[0] |= 0x00000010u;
}
void Laser_Scan::clear_has_steer() {
  _has_bits_[0] &= ~0x00000010u;
}
void Laser_Scan::clear_steer() {
  steer_ = 0;
  clear_has_steer();
}
double Laser_Scan::steer() const {
  // @@protoc_insertion_point(field_get:stdmsg.Laser_Scan.steer)
  return steer_;
}
void Laser_Scan::set_steer(double value) {
  set_has_steer();
  steer_ = value;
  // @@protoc_insertion_point(field_set:stdmsg.Laser_Scan.steer)
}

// optional int32 seq = 7 [default = 0];
bool Laser_Scan::has_seq() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void Laser_Scan::set_has_seq() {
  _has_bits_[0] |= 0x00000020u;
}
void Laser_Scan::clear_has_seq() {
  _has_bits_[0] &= ~0x00000020u;
}
void Laser_Scan::clear_seq() {
  seq_ = 0;
  clear_has_seq();
}
::google::protobuf::int32 Laser_Scan::seq() const {
  // @@protoc_insertion_point(field_get:stdmsg.Laser_Scan.seq)
  return seq_;
}
void Laser_Scan::set_seq(::google::protobuf::int32 value) {
  set_has_seq();
  seq_ = value;
  // @@protoc_insertion_point(field_set:stdmsg.Laser_Scan.seq)
}

// optional string annotation = 8 [default = ""];
bool Laser_Scan::has_annotation() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Laser_Scan::set_has_annotation() {
  _has_bits_[0] |= 0x00000001u;
}
void Laser_Scan::clear_has_annotation() {
  _has_bits_[0] &= ~0x00000001u;
}
void Laser_Scan::clear_annotation() {
  annotation_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_annotation();
}
const ::std::string& Laser_Scan::annotation() const {
  // @@protoc_insertion_point(field_get:stdmsg.Laser_Scan.annotation)
  return annotation_.GetNoArena();
}
void Laser_Scan::set_annotation(const ::std::string& value) {
  set_has_annotation();
  annotation_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:stdmsg.Laser_Scan.annotation)
}
#if LANG_CXX11
void Laser_Scan::set_annotation(::std::string&& value) {
  set_has_annotation();
  annotation_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:stdmsg.Laser_Scan.annotation)
}
#endif
void Laser_Scan::set_annotation(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_annotation();
  annotation_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:stdmsg.Laser_Scan.annotation)
}
void Laser_Scan::set_annotation(const char* value, size_t size) {
  set_has_annotation();
  annotation_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:stdmsg.Laser_Scan.annotation)
}
::std::string* Laser_Scan::mutable_annotation() {
  set_has_annotation();
  // @@protoc_insertion_point(field_mutable:stdmsg.Laser_Scan.annotation)
  return annotation_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Laser_Scan::release_annotation() {
  // @@protoc_insertion_point(field_release:stdmsg.Laser_Scan.annotation)
  clear_has_annotation();
  return annotation_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Laser_Scan::set_allocated_annotation(::std::string* annotation) {
  if (annotation != NULL) {
    set_has_annotation();
  } else {
    clear_has_annotation();
  }
  annotation_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), annotation);
  // @@protoc_insertion_point(field_set_allocated:stdmsg.Laser_Scan.annotation)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Global_Plan::kPathFieldNumber;
const int Global_Plan::kSeqFieldNumber;
const int Global_Plan::kGoalReachedFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Global_Plan::Global_Plan()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_stdmsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:stdmsg.Global_Plan)
}
Global_Plan::Global_Plan(const Global_Plan& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      path_(from.path_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&seq_, &from.seq_,
    static_cast<size_t>(reinterpret_cast<char*>(&goal_reached_) -
    reinterpret_cast<char*>(&seq_)) + sizeof(goal_reached_));
  // @@protoc_insertion_point(copy_constructor:stdmsg.Global_Plan)
}

void Global_Plan::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&seq_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&goal_reached_) -
      reinterpret_cast<char*>(&seq_)) + sizeof(goal_reached_));
}

Global_Plan::~Global_Plan() {
  // @@protoc_insertion_point(destructor:stdmsg.Global_Plan)
  SharedDtor();
}

void Global_Plan::SharedDtor() {
}

void Global_Plan::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Global_Plan::descriptor() {
  protobuf_stdmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_stdmsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Global_Plan& Global_Plan::default_instance() {
  protobuf_stdmsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

Global_Plan* Global_Plan::New(::google::protobuf::Arena* arena) const {
  Global_Plan* n = new Global_Plan;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Global_Plan::Clear() {
// @@protoc_insertion_point(message_clear_start:stdmsg.Global_Plan)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  path_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&seq_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&goal_reached_) -
        reinterpret_cast<char*>(&seq_)) + sizeof(goal_reached_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Global_Plan::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:stdmsg.Global_Plan)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .stdmsg.Pose path = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_path()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 seq = 2 [default = 0];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_seq();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &seq_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 goal_reached = 3 [default = 0];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_goal_reached();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &goal_reached_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:stdmsg.Global_Plan)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:stdmsg.Global_Plan)
  return false;
#undef DO_
}

void Global_Plan::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:stdmsg.Global_Plan)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .stdmsg.Pose path = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->path_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->path(static_cast<int>(i)), output);
  }

  cached_has_bits = _has_bits_[0];
  // optional int32 seq = 2 [default = 0];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->seq(), output);
  }

  // optional int32 goal_reached = 3 [default = 0];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->goal_reached(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:stdmsg.Global_Plan)
}

::google::protobuf::uint8* Global_Plan::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:stdmsg.Global_Plan)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .stdmsg.Pose path = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->path_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->path(static_cast<int>(i)), deterministic, target);
  }

  cached_has_bits = _has_bits_[0];
  // optional int32 seq = 2 [default = 0];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->seq(), target);
  }

  // optional int32 goal_reached = 3 [default = 0];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->goal_reached(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:stdmsg.Global_Plan)
  return target;
}

size_t Global_Plan::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:stdmsg.Global_Plan)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .stdmsg.Pose path = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->path_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->path(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 3u) {
    // optional int32 seq = 2 [default = 0];
    if (has_seq()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->seq());
    }

    // optional int32 goal_reached = 3 [default = 0];
    if (has_goal_reached()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->goal_reached());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Global_Plan::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:stdmsg.Global_Plan)
  GOOGLE_DCHECK_NE(&from, this);
  const Global_Plan* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Global_Plan>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:stdmsg.Global_Plan)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:stdmsg.Global_Plan)
    MergeFrom(*source);
  }
}

void Global_Plan::MergeFrom(const Global_Plan& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:stdmsg.Global_Plan)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  path_.MergeFrom(from.path_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      seq_ = from.seq_;
    }
    if (cached_has_bits & 0x00000002u) {
      goal_reached_ = from.goal_reached_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Global_Plan::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:stdmsg.Global_Plan)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Global_Plan::CopyFrom(const Global_Plan& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:stdmsg.Global_Plan)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Global_Plan::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->path())) return false;
  return true;
}

void Global_Plan::Swap(Global_Plan* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Global_Plan::InternalSwap(Global_Plan* other) {
  using std::swap;
  path_.InternalSwap(&other->path_);
  swap(seq_, other->seq_);
  swap(goal_reached_, other->goal_reached_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Global_Plan::GetMetadata() const {
  protobuf_stdmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_stdmsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Global_Plan

// repeated .stdmsg.Pose path = 1;
int Global_Plan::path_size() const {
  return path_.size();
}
void Global_Plan::clear_path() {
  path_.Clear();
}
const ::stdmsg::Pose& Global_Plan::path(int index) const {
  // @@protoc_insertion_point(field_get:stdmsg.Global_Plan.path)
  return path_.Get(index);
}
::stdmsg::Pose* Global_Plan::mutable_path(int index) {
  // @@protoc_insertion_point(field_mutable:stdmsg.Global_Plan.path)
  return path_.Mutable(index);
}
::stdmsg::Pose* Global_Plan::add_path() {
  // @@protoc_insertion_point(field_add:stdmsg.Global_Plan.path)
  return path_.Add();
}
::google::protobuf::RepeatedPtrField< ::stdmsg::Pose >*
Global_Plan::mutable_path() {
  // @@protoc_insertion_point(field_mutable_list:stdmsg.Global_Plan.path)
  return &path_;
}
const ::google::protobuf::RepeatedPtrField< ::stdmsg::Pose >&
Global_Plan::path() const {
  // @@protoc_insertion_point(field_list:stdmsg.Global_Plan.path)
  return path_;
}

// optional int32 seq = 2 [default = 0];
bool Global_Plan::has_seq() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Global_Plan::set_has_seq() {
  _has_bits_[0] |= 0x00000001u;
}
void Global_Plan::clear_has_seq() {
  _has_bits_[0] &= ~0x00000001u;
}
void Global_Plan::clear_seq() {
  seq_ = 0;
  clear_has_seq();
}
::google::protobuf::int32 Global_Plan::seq() const {
  // @@protoc_insertion_point(field_get:stdmsg.Global_Plan.seq)
  return seq_;
}
void Global_Plan::set_seq(::google::protobuf::int32 value) {
  set_has_seq();
  seq_ = value;
  // @@protoc_insertion_point(field_set:stdmsg.Global_Plan.seq)
}

// optional int32 goal_reached = 3 [default = 0];
bool Global_Plan::has_goal_reached() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Global_Plan::set_has_goal_reached() {
  _has_bits_[0] |= 0x00000002u;
}
void Global_Plan::clear_has_goal_reached() {
  _has_bits_[0] &= ~0x00000002u;
}
void Global_Plan::clear_goal_reached() {
  goal_reached_ = 0;
  clear_has_goal_reached();
}
::google::protobuf::int32 Global_Plan::goal_reached() const {
  // @@protoc_insertion_point(field_get:stdmsg.Global_Plan.goal_reached)
  return goal_reached_;
}
void Global_Plan::set_goal_reached(::google::protobuf::int32 value) {
  set_has_goal_reached();
  goal_reached_ = value;
  // @@protoc_insertion_point(field_set:stdmsg.Global_Plan.goal_reached)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Data::kDataFieldNumber;
const int Data::kSeqFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Data::Data()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_stdmsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:stdmsg.Data)
}
Data::Data(const Data& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_data()) {
    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
  seq_ = from.seq_;
  // @@protoc_insertion_point(copy_constructor:stdmsg.Data)
}

void Data::SharedCtor() {
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  seq_ = 0;
}

Data::~Data() {
  // @@protoc_insertion_point(destructor:stdmsg.Data)
  SharedDtor();
}

void Data::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Data::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Data::descriptor() {
  protobuf_stdmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_stdmsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Data& Data::default_instance() {
  protobuf_stdmsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

Data* Data::New(::google::protobuf::Arena* arena) const {
  Data* n = new Data;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Data::Clear() {
// @@protoc_insertion_point(message_clear_start:stdmsg.Data)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (has_data()) {
    GOOGLE_DCHECK(!data_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*data_.UnsafeRawStringPointer())->clear();
  }
  seq_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Data::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:stdmsg.Data)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes data = 1 [default = ""];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 seq = 2 [default = 0];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_seq();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &seq_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:stdmsg.Data)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:stdmsg.Data)
  return false;
#undef DO_
}

void Data::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:stdmsg.Data)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes data = 1 [default = ""];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->data(), output);
  }

  // optional int32 seq = 2 [default = 0];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->seq(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:stdmsg.Data)
}

::google::protobuf::uint8* Data::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:stdmsg.Data)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes data = 1 [default = ""];
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->data(), target);
  }

  // optional int32 seq = 2 [default = 0];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->seq(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:stdmsg.Data)
  return target;
}

size_t Data::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:stdmsg.Data)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional bytes data = 1 [default = ""];
    if (has_data()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->data());
    }

    // optional int32 seq = 2 [default = 0];
    if (has_seq()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->seq());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Data::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:stdmsg.Data)
  GOOGLE_DCHECK_NE(&from, this);
  const Data* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Data>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:stdmsg.Data)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:stdmsg.Data)
    MergeFrom(*source);
  }
}

void Data::MergeFrom(const Data& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:stdmsg.Data)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
    if (cached_has_bits & 0x00000002u) {
      seq_ = from.seq_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Data::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:stdmsg.Data)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Data::CopyFrom(const Data& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:stdmsg.Data)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Data::IsInitialized() const {
  return true;
}

void Data::Swap(Data* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Data::InternalSwap(Data* other) {
  using std::swap;
  data_.Swap(&other->data_);
  swap(seq_, other->seq_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Data::GetMetadata() const {
  protobuf_stdmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_stdmsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Data

// optional bytes data = 1 [default = ""];
bool Data::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Data::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void Data::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void Data::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
const ::std::string& Data::data() const {
  // @@protoc_insertion_point(field_get:stdmsg.Data.data)
  return data_.GetNoArena();
}
void Data::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:stdmsg.Data.data)
}
#if LANG_CXX11
void Data::set_data(::std::string&& value) {
  set_has_data();
  data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:stdmsg.Data.data)
}
#endif
void Data::set_data(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:stdmsg.Data.data)
}
void Data::set_data(const void* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:stdmsg.Data.data)
}
::std::string* Data::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:stdmsg.Data.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Data::release_data() {
  // @@protoc_insertion_point(field_release:stdmsg.Data.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Data::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:stdmsg.Data.data)
}

// optional int32 seq = 2 [default = 0];
bool Data::has_seq() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Data::set_has_seq() {
  _has_bits_[0] |= 0x00000002u;
}
void Data::clear_has_seq() {
  _has_bits_[0] &= ~0x00000002u;
}
void Data::clear_seq() {
  seq_ = 0;
  clear_has_seq();
}
::google::protobuf::int32 Data::seq() const {
  // @@protoc_insertion_point(field_get:stdmsg.Data.seq)
  return seq_;
}
void Data::set_seq(::google::protobuf::int32 value) {
  set_has_seq();
  seq_ = value;
  // @@protoc_insertion_point(field_set:stdmsg.Data.seq)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int String::kStrFieldNumber;
const int String::kSeqFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

String::String()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_stdmsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:stdmsg.String)
}
String::String(const String& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  str_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_str()) {
    str_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.str_);
  }
  seq_ = from.seq_;
  // @@protoc_insertion_point(copy_constructor:stdmsg.String)
}

void String::SharedCtor() {
  _cached_size_ = 0;
  str_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  seq_ = 0;
}

String::~String() {
  // @@protoc_insertion_point(destructor:stdmsg.String)
  SharedDtor();
}

void String::SharedDtor() {
  str_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void String::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* String::descriptor() {
  protobuf_stdmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_stdmsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const String& String::default_instance() {
  protobuf_stdmsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

String* String::New(::google::protobuf::Arena* arena) const {
  String* n = new String;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void String::Clear() {
// @@protoc_insertion_point(message_clear_start:stdmsg.String)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (has_str()) {
    GOOGLE_DCHECK(!str_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*str_.UnsafeRawStringPointer())->clear();
  }
  seq_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool String::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:stdmsg.String)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string str = 1 [default = ""];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_str()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->str().data(), static_cast<int>(this->str().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "stdmsg.String.str");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 seq = 2 [default = 0];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_seq();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &seq_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:stdmsg.String)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:stdmsg.String)
  return false;
#undef DO_
}

void String::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:stdmsg.String)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string str = 1 [default = ""];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->str().data(), static_cast<int>(this->str().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "stdmsg.String.str");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->str(), output);
  }

  // optional int32 seq = 2 [default = 0];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->seq(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:stdmsg.String)
}

::google::protobuf::uint8* String::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:stdmsg.String)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string str = 1 [default = ""];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->str().data(), static_cast<int>(this->str().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "stdmsg.String.str");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->str(), target);
  }

  // optional int32 seq = 2 [default = 0];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->seq(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:stdmsg.String)
  return target;
}

size_t String::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:stdmsg.String)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional string str = 1 [default = ""];
    if (has_str()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->str());
    }

    // optional int32 seq = 2 [default = 0];
    if (has_seq()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->seq());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void String::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:stdmsg.String)
  GOOGLE_DCHECK_NE(&from, this);
  const String* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const String>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:stdmsg.String)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:stdmsg.String)
    MergeFrom(*source);
  }
}

void String::MergeFrom(const String& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:stdmsg.String)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_str();
      str_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.str_);
    }
    if (cached_has_bits & 0x00000002u) {
      seq_ = from.seq_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void String::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:stdmsg.String)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void String::CopyFrom(const String& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:stdmsg.String)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool String::IsInitialized() const {
  return true;
}

void String::Swap(String* other) {
  if (other == this) return;
  InternalSwap(other);
}
void String::InternalSwap(String* other) {
  using std::swap;
  str_.Swap(&other->str_);
  swap(seq_, other->seq_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata String::GetMetadata() const {
  protobuf_stdmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_stdmsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// String

// optional string str = 1 [default = ""];
bool String::has_str() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void String::set_has_str() {
  _has_bits_[0] |= 0x00000001u;
}
void String::clear_has_str() {
  _has_bits_[0] &= ~0x00000001u;
}
void String::clear_str() {
  str_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_str();
}
const ::std::string& String::str() const {
  // @@protoc_insertion_point(field_get:stdmsg.String.str)
  return str_.GetNoArena();
}
void String::set_str(const ::std::string& value) {
  set_has_str();
  str_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:stdmsg.String.str)
}
#if LANG_CXX11
void String::set_str(::std::string&& value) {
  set_has_str();
  str_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:stdmsg.String.str)
}
#endif
void String::set_str(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_str();
  str_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:stdmsg.String.str)
}
void String::set_str(const char* value, size_t size) {
  set_has_str();
  str_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:stdmsg.String.str)
}
::std::string* String::mutable_str() {
  set_has_str();
  // @@protoc_insertion_point(field_mutable:stdmsg.String.str)
  return str_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* String::release_str() {
  // @@protoc_insertion_point(field_release:stdmsg.String.str)
  clear_has_str();
  return str_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void String::set_allocated_str(::std::string* str) {
  if (str != NULL) {
    set_has_str();
  } else {
    clear_has_str();
  }
  str_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), str);
  // @@protoc_insertion_point(field_set_allocated:stdmsg.String.str)
}

// optional int32 seq = 2 [default = 0];
bool String::has_seq() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void String::set_has_seq() {
  _has_bits_[0] |= 0x00000002u;
}
void String::clear_has_seq() {
  _has_bits_[0] &= ~0x00000002u;
}
void String::clear_seq() {
  seq_ = 0;
  clear_has_seq();
}
::google::protobuf::int32 String::seq() const {
  // @@protoc_insertion_point(field_get:stdmsg.String.seq)
  return seq_;
}
void String::set_seq(::google::protobuf::int32 value) {
  set_has_seq();
  seq_ = value;
  // @@protoc_insertion_point(field_set:stdmsg.String.seq)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LaserList::kScansFieldNumber;
const int LaserList::kSeqFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LaserList::LaserList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_stdmsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:stdmsg.LaserList)
}
LaserList::LaserList(const LaserList& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      scans_(from.scans_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  seq_ = from.seq_;
  // @@protoc_insertion_point(copy_constructor:stdmsg.LaserList)
}

void LaserList::SharedCtor() {
  _cached_size_ = 0;
  seq_ = 0;
}

LaserList::~LaserList() {
  // @@protoc_insertion_point(destructor:stdmsg.LaserList)
  SharedDtor();
}

void LaserList::SharedDtor() {
}

void LaserList::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LaserList::descriptor() {
  protobuf_stdmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_stdmsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LaserList& LaserList::default_instance() {
  protobuf_stdmsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

LaserList* LaserList::New(::google::protobuf::Arena* arena) const {
  LaserList* n = new LaserList;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LaserList::Clear() {
// @@protoc_insertion_point(message_clear_start:stdmsg.LaserList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  scans_.Clear();
  seq_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool LaserList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:stdmsg.LaserList)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .stdmsg.Laser_Scan scans = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_scans()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 seq = 2 [default = 0];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_seq();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &seq_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:stdmsg.LaserList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:stdmsg.LaserList)
  return false;
#undef DO_
}

void LaserList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:stdmsg.LaserList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .stdmsg.Laser_Scan scans = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->scans_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->scans(static_cast<int>(i)), output);
  }

  cached_has_bits = _has_bits_[0];
  // optional int32 seq = 2 [default = 0];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->seq(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:stdmsg.LaserList)
}

::google::protobuf::uint8* LaserList::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:stdmsg.LaserList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .stdmsg.Laser_Scan scans = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->scans_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->scans(static_cast<int>(i)), deterministic, target);
  }

  cached_has_bits = _has_bits_[0];
  // optional int32 seq = 2 [default = 0];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->seq(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:stdmsg.LaserList)
  return target;
}

size_t LaserList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:stdmsg.LaserList)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .stdmsg.Laser_Scan scans = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->scans_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->scans(static_cast<int>(i)));
    }
  }

  // optional int32 seq = 2 [default = 0];
  if (has_seq()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->seq());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LaserList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:stdmsg.LaserList)
  GOOGLE_DCHECK_NE(&from, this);
  const LaserList* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LaserList>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:stdmsg.LaserList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:stdmsg.LaserList)
    MergeFrom(*source);
  }
}

void LaserList::MergeFrom(const LaserList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:stdmsg.LaserList)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  scans_.MergeFrom(from.scans_);
  if (from.has_seq()) {
    set_seq(from.seq());
  }
}

void LaserList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:stdmsg.LaserList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LaserList::CopyFrom(const LaserList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:stdmsg.LaserList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LaserList::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->scans())) return false;
  return true;
}

void LaserList::Swap(LaserList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LaserList::InternalSwap(LaserList* other) {
  using std::swap;
  scans_.InternalSwap(&other->scans_);
  swap(seq_, other->seq_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LaserList::GetMetadata() const {
  protobuf_stdmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_stdmsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// LaserList

// repeated .stdmsg.Laser_Scan scans = 1;
int LaserList::scans_size() const {
  return scans_.size();
}
void LaserList::clear_scans() {
  scans_.Clear();
}
const ::stdmsg::Laser_Scan& LaserList::scans(int index) const {
  // @@protoc_insertion_point(field_get:stdmsg.LaserList.scans)
  return scans_.Get(index);
}
::stdmsg::Laser_Scan* LaserList::mutable_scans(int index) {
  // @@protoc_insertion_point(field_mutable:stdmsg.LaserList.scans)
  return scans_.Mutable(index);
}
::stdmsg::Laser_Scan* LaserList::add_scans() {
  // @@protoc_insertion_point(field_add:stdmsg.LaserList.scans)
  return scans_.Add();
}
::google::protobuf::RepeatedPtrField< ::stdmsg::Laser_Scan >*
LaserList::mutable_scans() {
  // @@protoc_insertion_point(field_mutable_list:stdmsg.LaserList.scans)
  return &scans_;
}
const ::google::protobuf::RepeatedPtrField< ::stdmsg::Laser_Scan >&
LaserList::scans() const {
  // @@protoc_insertion_point(field_list:stdmsg.LaserList.scans)
  return scans_;
}

// optional int32 seq = 2 [default = 0];
bool LaserList::has_seq() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void LaserList::set_has_seq() {
  _has_bits_[0] |= 0x00000001u;
}
void LaserList::clear_has_seq() {
  _has_bits_[0] &= ~0x00000001u;
}
void LaserList::clear_seq() {
  seq_ = 0;
  clear_has_seq();
}
::google::protobuf::int32 LaserList::seq() const {
  // @@protoc_insertion_point(field_get:stdmsg.LaserList.seq)
  return seq_;
}
void LaserList::set_seq(::google::protobuf::int32 value) {
  set_has_seq();
  seq_ = value;
  // @@protoc_insertion_point(field_set:stdmsg.LaserList.seq)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Block::kNameFieldNumber;
const int Block::kInputFieldNumber;
const int Block::kInputTypeFieldNumber;
const int Block::kOutputFieldNumber;
const int Block::kOutputTypeFieldNumber;
const int Block::kDllFieldNumber;
const int Block::kObjectFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Block::Block()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_stdmsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:stdmsg.Block)
}
Block::Block(const Block& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      input_(from.input_),
      input_type_(from.input_type_),
      output_(from.output_),
      output_type_(from.output_type_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  dll_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_dll()) {
    dll_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.dll_);
  }
  object_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_object()) {
    object_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.object_);
  }
  // @@protoc_insertion_point(copy_constructor:stdmsg.Block)
}

void Block::SharedCtor() {
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  dll_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  object_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

Block::~Block() {
  // @@protoc_insertion_point(destructor:stdmsg.Block)
  SharedDtor();
}

void Block::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  dll_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  object_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Block::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Block::descriptor() {
  protobuf_stdmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_stdmsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Block& Block::default_instance() {
  protobuf_stdmsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

Block* Block::New(::google::protobuf::Arena* arena) const {
  Block* n = new Block;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Block::Clear() {
// @@protoc_insertion_point(message_clear_start:stdmsg.Block)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  input_.Clear();
  input_type_.Clear();
  output_.Clear();
  output_type_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*name_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!dll_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*dll_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(!object_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*object_.UnsafeRawStringPointer())->clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Block::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:stdmsg.Block)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "stdmsg.Block.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string input = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_input()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->input(this->input_size() - 1).data(),
            static_cast<int>(this->input(this->input_size() - 1).length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "stdmsg.Block.input");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string input_type = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_input_type()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->input_type(this->input_type_size() - 1).data(),
            static_cast<int>(this->input_type(this->input_type_size() - 1).length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "stdmsg.Block.input_type");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string output = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_output()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->output(this->output_size() - 1).data(),
            static_cast<int>(this->output(this->output_size() - 1).length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "stdmsg.Block.output");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string output_type = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_output_type()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->output_type(this->output_type_size() - 1).data(),
            static_cast<int>(this->output_type(this->output_type_size() - 1).length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "stdmsg.Block.output_type");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string dll = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_dll()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->dll().data(), static_cast<int>(this->dll().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "stdmsg.Block.dll");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string object = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_object()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->object().data(), static_cast<int>(this->object().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "stdmsg.Block.object");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:stdmsg.Block)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:stdmsg.Block)
  return false;
#undef DO_
}

void Block::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:stdmsg.Block)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "stdmsg.Block.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // repeated string input = 2;
  for (int i = 0, n = this->input_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->input(i).data(), static_cast<int>(this->input(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "stdmsg.Block.input");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->input(i), output);
  }

  // repeated string input_type = 3;
  for (int i = 0, n = this->input_type_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->input_type(i).data(), static_cast<int>(this->input_type(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "stdmsg.Block.input_type");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->input_type(i), output);
  }

  // repeated string output = 4;
  for (int i = 0, n = this->output_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->output(i).data(), static_cast<int>(this->output(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "stdmsg.Block.output");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->output(i), output);
  }

  // repeated string output_type = 5;
  for (int i = 0, n = this->output_type_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->output_type(i).data(), static_cast<int>(this->output_type(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "stdmsg.Block.output_type");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      5, this->output_type(i), output);
  }

  // required string dll = 6;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->dll().data(), static_cast<int>(this->dll().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "stdmsg.Block.dll");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->dll(), output);
  }

  // required string object = 7;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->object().data(), static_cast<int>(this->object().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "stdmsg.Block.object");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->object(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:stdmsg.Block)
}

::google::protobuf::uint8* Block::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:stdmsg.Block)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "stdmsg.Block.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // repeated string input = 2;
  for (int i = 0, n = this->input_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->input(i).data(), static_cast<int>(this->input(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "stdmsg.Block.input");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->input(i), target);
  }

  // repeated string input_type = 3;
  for (int i = 0, n = this->input_type_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->input_type(i).data(), static_cast<int>(this->input_type(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "stdmsg.Block.input_type");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(3, this->input_type(i), target);
  }

  // repeated string output = 4;
  for (int i = 0, n = this->output_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->output(i).data(), static_cast<int>(this->output(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "stdmsg.Block.output");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(4, this->output(i), target);
  }

  // repeated string output_type = 5;
  for (int i = 0, n = this->output_type_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->output_type(i).data(), static_cast<int>(this->output_type(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "stdmsg.Block.output_type");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(5, this->output_type(i), target);
  }

  // required string dll = 6;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->dll().data(), static_cast<int>(this->dll().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "stdmsg.Block.dll");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->dll(), target);
  }

  // required string object = 7;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->object().data(), static_cast<int>(this->object().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "stdmsg.Block.object");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->object(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:stdmsg.Block)
  return target;
}

size_t Block::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:stdmsg.Block)
  size_t total_size = 0;

  if (has_name()) {
    // required string name = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  if (has_dll()) {
    // required string dll = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->dll());
  }

  if (has_object()) {
    // required string object = 7;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->object());
  }

  return total_size;
}
size_t Block::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:stdmsg.Block)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required string name = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());

    // required string dll = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->dll());

    // required string object = 7;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->object());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated string input = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->input_size());
  for (int i = 0, n = this->input_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->input(i));
  }

  // repeated string input_type = 3;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->input_type_size());
  for (int i = 0, n = this->input_type_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->input_type(i));
  }

  // repeated string output = 4;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->output_size());
  for (int i = 0, n = this->output_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->output(i));
  }

  // repeated string output_type = 5;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->output_type_size());
  for (int i = 0, n = this->output_type_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->output_type(i));
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Block::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:stdmsg.Block)
  GOOGLE_DCHECK_NE(&from, this);
  const Block* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Block>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:stdmsg.Block)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:stdmsg.Block)
    MergeFrom(*source);
  }
}

void Block::MergeFrom(const Block& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:stdmsg.Block)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  input_.MergeFrom(from.input_);
  input_type_.MergeFrom(from.input_type_);
  output_.MergeFrom(from.output_);
  output_type_.MergeFrom(from.output_type_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_dll();
      dll_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.dll_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_object();
      object_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.object_);
    }
  }
}

void Block::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:stdmsg.Block)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Block::CopyFrom(const Block& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:stdmsg.Block)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Block::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;
  return true;
}

void Block::Swap(Block* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Block::InternalSwap(Block* other) {
  using std::swap;
  input_.InternalSwap(&other->input_);
  input_type_.InternalSwap(&other->input_type_);
  output_.InternalSwap(&other->output_);
  output_type_.InternalSwap(&other->output_type_);
  name_.Swap(&other->name_);
  dll_.Swap(&other->dll_);
  object_.Swap(&other->object_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Block::GetMetadata() const {
  protobuf_stdmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_stdmsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Block

// required string name = 1;
bool Block::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Block::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
void Block::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
void Block::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
const ::std::string& Block::name() const {
  // @@protoc_insertion_point(field_get:stdmsg.Block.name)
  return name_.GetNoArena();
}
void Block::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:stdmsg.Block.name)
}
#if LANG_CXX11
void Block::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:stdmsg.Block.name)
}
#endif
void Block::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:stdmsg.Block.name)
}
void Block::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:stdmsg.Block.name)
}
::std::string* Block::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:stdmsg.Block.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Block::release_name() {
  // @@protoc_insertion_point(field_release:stdmsg.Block.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Block::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:stdmsg.Block.name)
}

// repeated string input = 2;
int Block::input_size() const {
  return input_.size();
}
void Block::clear_input() {
  input_.Clear();
}
const ::std::string& Block::input(int index) const {
  // @@protoc_insertion_point(field_get:stdmsg.Block.input)
  return input_.Get(index);
}
::std::string* Block::mutable_input(int index) {
  // @@protoc_insertion_point(field_mutable:stdmsg.Block.input)
  return input_.Mutable(index);
}
void Block::set_input(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:stdmsg.Block.input)
  input_.Mutable(index)->assign(value);
}
#if LANG_CXX11
void Block::set_input(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:stdmsg.Block.input)
  input_.Mutable(index)->assign(std::move(value));
}
#endif
void Block::set_input(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  input_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:stdmsg.Block.input)
}
void Block::set_input(int index, const char* value, size_t size) {
  input_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:stdmsg.Block.input)
}
::std::string* Block::add_input() {
  // @@protoc_insertion_point(field_add_mutable:stdmsg.Block.input)
  return input_.Add();
}
void Block::add_input(const ::std::string& value) {
  input_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:stdmsg.Block.input)
}
#if LANG_CXX11
void Block::add_input(::std::string&& value) {
  input_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:stdmsg.Block.input)
}
#endif
void Block::add_input(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  input_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:stdmsg.Block.input)
}
void Block::add_input(const char* value, size_t size) {
  input_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:stdmsg.Block.input)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
Block::input() const {
  // @@protoc_insertion_point(field_list:stdmsg.Block.input)
  return input_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
Block::mutable_input() {
  // @@protoc_insertion_point(field_mutable_list:stdmsg.Block.input)
  return &input_;
}

// repeated string input_type = 3;
int Block::input_type_size() const {
  return input_type_.size();
}
void Block::clear_input_type() {
  input_type_.Clear();
}
const ::std::string& Block::input_type(int index) const {
  // @@protoc_insertion_point(field_get:stdmsg.Block.input_type)
  return input_type_.Get(index);
}
::std::string* Block::mutable_input_type(int index) {
  // @@protoc_insertion_point(field_mutable:stdmsg.Block.input_type)
  return input_type_.Mutable(index);
}
void Block::set_input_type(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:stdmsg.Block.input_type)
  input_type_.Mutable(index)->assign(value);
}
#if LANG_CXX11
void Block::set_input_type(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:stdmsg.Block.input_type)
  input_type_.Mutable(index)->assign(std::move(value));
}
#endif
void Block::set_input_type(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  input_type_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:stdmsg.Block.input_type)
}
void Block::set_input_type(int index, const char* value, size_t size) {
  input_type_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:stdmsg.Block.input_type)
}
::std::string* Block::add_input_type() {
  // @@protoc_insertion_point(field_add_mutable:stdmsg.Block.input_type)
  return input_type_.Add();
}
void Block::add_input_type(const ::std::string& value) {
  input_type_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:stdmsg.Block.input_type)
}
#if LANG_CXX11
void Block::add_input_type(::std::string&& value) {
  input_type_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:stdmsg.Block.input_type)
}
#endif
void Block::add_input_type(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  input_type_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:stdmsg.Block.input_type)
}
void Block::add_input_type(const char* value, size_t size) {
  input_type_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:stdmsg.Block.input_type)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
Block::input_type() const {
  // @@protoc_insertion_point(field_list:stdmsg.Block.input_type)
  return input_type_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
Block::mutable_input_type() {
  // @@protoc_insertion_point(field_mutable_list:stdmsg.Block.input_type)
  return &input_type_;
}

// repeated string output = 4;
int Block::output_size() const {
  return output_.size();
}
void Block::clear_output() {
  output_.Clear();
}
const ::std::string& Block::output(int index) const {
  // @@protoc_insertion_point(field_get:stdmsg.Block.output)
  return output_.Get(index);
}
::std::string* Block::mutable_output(int index) {
  // @@protoc_insertion_point(field_mutable:stdmsg.Block.output)
  return output_.Mutable(index);
}
void Block::set_output(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:stdmsg.Block.output)
  output_.Mutable(index)->assign(value);
}
#if LANG_CXX11
void Block::set_output(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:stdmsg.Block.output)
  output_.Mutable(index)->assign(std::move(value));
}
#endif
void Block::set_output(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  output_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:stdmsg.Block.output)
}
void Block::set_output(int index, const char* value, size_t size) {
  output_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:stdmsg.Block.output)
}
::std::string* Block::add_output() {
  // @@protoc_insertion_point(field_add_mutable:stdmsg.Block.output)
  return output_.Add();
}
void Block::add_output(const ::std::string& value) {
  output_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:stdmsg.Block.output)
}
#if LANG_CXX11
void Block::add_output(::std::string&& value) {
  output_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:stdmsg.Block.output)
}
#endif
void Block::add_output(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  output_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:stdmsg.Block.output)
}
void Block::add_output(const char* value, size_t size) {
  output_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:stdmsg.Block.output)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
Block::output() const {
  // @@protoc_insertion_point(field_list:stdmsg.Block.output)
  return output_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
Block::mutable_output() {
  // @@protoc_insertion_point(field_mutable_list:stdmsg.Block.output)
  return &output_;
}

// repeated string output_type = 5;
int Block::output_type_size() const {
  return output_type_.size();
}
void Block::clear_output_type() {
  output_type_.Clear();
}
const ::std::string& Block::output_type(int index) const {
  // @@protoc_insertion_point(field_get:stdmsg.Block.output_type)
  return output_type_.Get(index);
}
::std::string* Block::mutable_output_type(int index) {
  // @@protoc_insertion_point(field_mutable:stdmsg.Block.output_type)
  return output_type_.Mutable(index);
}
void Block::set_output_type(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:stdmsg.Block.output_type)
  output_type_.Mutable(index)->assign(value);
}
#if LANG_CXX11
void Block::set_output_type(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:stdmsg.Block.output_type)
  output_type_.Mutable(index)->assign(std::move(value));
}
#endif
void Block::set_output_type(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  output_type_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:stdmsg.Block.output_type)
}
void Block::set_output_type(int index, const char* value, size_t size) {
  output_type_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:stdmsg.Block.output_type)
}
::std::string* Block::add_output_type() {
  // @@protoc_insertion_point(field_add_mutable:stdmsg.Block.output_type)
  return output_type_.Add();
}
void Block::add_output_type(const ::std::string& value) {
  output_type_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:stdmsg.Block.output_type)
}
#if LANG_CXX11
void Block::add_output_type(::std::string&& value) {
  output_type_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:stdmsg.Block.output_type)
}
#endif
void Block::add_output_type(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  output_type_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:stdmsg.Block.output_type)
}
void Block::add_output_type(const char* value, size_t size) {
  output_type_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:stdmsg.Block.output_type)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
Block::output_type() const {
  // @@protoc_insertion_point(field_list:stdmsg.Block.output_type)
  return output_type_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
Block::mutable_output_type() {
  // @@protoc_insertion_point(field_mutable_list:stdmsg.Block.output_type)
  return &output_type_;
}

// required string dll = 6;
bool Block::has_dll() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Block::set_has_dll() {
  _has_bits_[0] |= 0x00000002u;
}
void Block::clear_has_dll() {
  _has_bits_[0] &= ~0x00000002u;
}
void Block::clear_dll() {
  dll_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_dll();
}
const ::std::string& Block::dll() const {
  // @@protoc_insertion_point(field_get:stdmsg.Block.dll)
  return dll_.GetNoArena();
}
void Block::set_dll(const ::std::string& value) {
  set_has_dll();
  dll_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:stdmsg.Block.dll)
}
#if LANG_CXX11
void Block::set_dll(::std::string&& value) {
  set_has_dll();
  dll_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:stdmsg.Block.dll)
}
#endif
void Block::set_dll(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_dll();
  dll_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:stdmsg.Block.dll)
}
void Block::set_dll(const char* value, size_t size) {
  set_has_dll();
  dll_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:stdmsg.Block.dll)
}
::std::string* Block::mutable_dll() {
  set_has_dll();
  // @@protoc_insertion_point(field_mutable:stdmsg.Block.dll)
  return dll_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Block::release_dll() {
  // @@protoc_insertion_point(field_release:stdmsg.Block.dll)
  clear_has_dll();
  return dll_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Block::set_allocated_dll(::std::string* dll) {
  if (dll != NULL) {
    set_has_dll();
  } else {
    clear_has_dll();
  }
  dll_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), dll);
  // @@protoc_insertion_point(field_set_allocated:stdmsg.Block.dll)
}

// required string object = 7;
bool Block::has_object() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void Block::set_has_object() {
  _has_bits_[0] |= 0x00000004u;
}
void Block::clear_has_object() {
  _has_bits_[0] &= ~0x00000004u;
}
void Block::clear_object() {
  object_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_object();
}
const ::std::string& Block::object() const {
  // @@protoc_insertion_point(field_get:stdmsg.Block.object)
  return object_.GetNoArena();
}
void Block::set_object(const ::std::string& value) {
  set_has_object();
  object_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:stdmsg.Block.object)
}
#if LANG_CXX11
void Block::set_object(::std::string&& value) {
  set_has_object();
  object_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:stdmsg.Block.object)
}
#endif
void Block::set_object(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_object();
  object_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:stdmsg.Block.object)
}
void Block::set_object(const char* value, size_t size) {
  set_has_object();
  object_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:stdmsg.Block.object)
}
::std::string* Block::mutable_object() {
  set_has_object();
  // @@protoc_insertion_point(field_mutable:stdmsg.Block.object)
  return object_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Block::release_object() {
  // @@protoc_insertion_point(field_release:stdmsg.Block.object)
  clear_has_object();
  return object_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Block::set_allocated_object(::std::string* object) {
  if (object != NULL) {
    set_has_object();
  } else {
    clear_has_object();
  }
  object_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), object);
  // @@protoc_insertion_point(field_set_allocated:stdmsg.Block.object)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Net::kBlockFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Net::Net()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_stdmsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:stdmsg.Net)
}
Net::Net(const Net& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      block_(from.block_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:stdmsg.Net)
}

void Net::SharedCtor() {
  _cached_size_ = 0;
}

Net::~Net() {
  // @@protoc_insertion_point(destructor:stdmsg.Net)
  SharedDtor();
}

void Net::SharedDtor() {
}

void Net::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Net::descriptor() {
  protobuf_stdmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_stdmsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Net& Net::default_instance() {
  protobuf_stdmsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

Net* Net::New(::google::protobuf::Arena* arena) const {
  Net* n = new Net;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Net::Clear() {
// @@protoc_insertion_point(message_clear_start:stdmsg.Net)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  block_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Net::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:stdmsg.Net)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .stdmsg.Block block = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_block()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:stdmsg.Net)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:stdmsg.Net)
  return false;
#undef DO_
}

void Net::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:stdmsg.Net)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .stdmsg.Block block = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->block_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->block(static_cast<int>(i)), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:stdmsg.Net)
}

::google::protobuf::uint8* Net::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:stdmsg.Net)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .stdmsg.Block block = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->block_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->block(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:stdmsg.Net)
  return target;
}

size_t Net::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:stdmsg.Net)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .stdmsg.Block block = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->block_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->block(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Net::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:stdmsg.Net)
  GOOGLE_DCHECK_NE(&from, this);
  const Net* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Net>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:stdmsg.Net)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:stdmsg.Net)
    MergeFrom(*source);
  }
}

void Net::MergeFrom(const Net& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:stdmsg.Net)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  block_.MergeFrom(from.block_);
}

void Net::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:stdmsg.Net)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Net::CopyFrom(const Net& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:stdmsg.Net)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Net::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->block())) return false;
  return true;
}

void Net::Swap(Net* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Net::InternalSwap(Net* other) {
  using std::swap;
  block_.InternalSwap(&other->block_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Net::GetMetadata() const {
  protobuf_stdmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_stdmsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Net

// repeated .stdmsg.Block block = 1;
int Net::block_size() const {
  return block_.size();
}
void Net::clear_block() {
  block_.Clear();
}
const ::stdmsg::Block& Net::block(int index) const {
  // @@protoc_insertion_point(field_get:stdmsg.Net.block)
  return block_.Get(index);
}
::stdmsg::Block* Net::mutable_block(int index) {
  // @@protoc_insertion_point(field_mutable:stdmsg.Net.block)
  return block_.Mutable(index);
}
::stdmsg::Block* Net::add_block() {
  // @@protoc_insertion_point(field_add:stdmsg.Net.block)
  return block_.Add();
}
::google::protobuf::RepeatedPtrField< ::stdmsg::Block >*
Net::mutable_block() {
  // @@protoc_insertion_point(field_mutable_list:stdmsg.Net.block)
  return &block_;
}
const ::google::protobuf::RepeatedPtrField< ::stdmsg::Block >&
Net::block() const {
  // @@protoc_insertion_point(field_list:stdmsg.Net.block)
  return block_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace stdmsg

// @@protoc_insertion_point(global_scope)
